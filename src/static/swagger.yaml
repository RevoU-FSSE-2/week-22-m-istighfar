openapi: 3.0.3
info:
  title: Task Geass
  version: 1.0.0
  contact: {}
servers:
  - url : http://34.126.184.177
    description : Production server
  - url: http://127.0.0.1:5000
    description: Development server
 
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register
      description: Register
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: istighfar.amal@gmail.com
                password:
                  type: string
                  example: '123456'
                role:
                  type: string
                  example: admin
                username:
                  type: string
                  example: tifar
            examples:
              Register:
                value:
                  email: istighfar.amal@gmail.com
                  password: '123456'
                  role: admin
                  username: tifar
      responses:
        '200':
          description: ''
  /auth/verify-email/{token}:
    get:
      tags:
        - auth
      summary: Verify Email
      description: Verify Email
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            examples:
              Verify Email:
                value: ''
      responses:
        '200':
          description: ''
      security:
        - {}
    parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
          example: ''
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: '123456'
                username:
                  type: string
                  example: tifar
            examples:
              Login:
                value:
                  password: '123456'
                  username: tifar
      responses:
        '200':
          description: ''
  /auth/refreshToken:
    post:
      tags:
        - auth
      summary: Refresh Acess Token
      description: Refresh Acess Token
      operationId: refreshAcessToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWQiOiI2NTI4MTQ3NjM3YjljNDYyMjJlZjZkZDciLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2OTcxMjkyNDMsImV4cCI6MTY5NzczNDA0M30.YiyW9nuY4XCxLr3UNVfr3yzs4qszKPoAW7giQaOWk8I
            examples:
              Refresh Acess Token:
                value:
                  refreshToken: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWQiOiI2NTI4MTQ3NjM3YjljNDYyMjJlZjZkZDciLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2OTcxMjkyNDMsImV4cCI6MTY5NzczNDA0M30.YiyW9nuY4XCxLr3UNVfr3yzs4qszKPoAW7giQaOWk8I
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  //auth/request-password-reset:
    post:
      tags:
        - auth
      summary: Request Reset Password
      description: Request Reset Password
      operationId: requestResetPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: istighfar.amal@gmail.com
            examples:
              Request Reset Password:
                value:
                  email: istighfar.amal@gmail.com
      responses:
        '200':
          description: ''
      security:
        - {}
  /auth/reset-password/{resetToken}:
    post:
      tags:
        - auth
      summary: Create New Password
      description: Create New Password
      operationId: createNewPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                  example: '1234567'
            examples:
              Create New Password:
                value:
                  new_password: '1234567'
      responses:
        '200':
          description: ''
      security:
        - {}
    parameters:
      - name: resetToken
        in: path
        required: true
        schema:
          type: string
          example: ''
  /user/tasks:
    get:
      tags:
        - user
      summary: Get All Tasks
      description: Get All Tasks
      operationId: getAllTasks
      parameters:
        - name: search
          in: query
          schema:
            type: string
            example: ''
        - name: priority
          in: query
          schema:
            type: string
            example: ''
        - name: status
          in: query
          schema:
            type: string
            example: pending
        - name: dueDate
          in: query
          schema:
            type: string
            example: ''
        - name: sortOrder
          in: query
          schema:
            type: string
            example: ''
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
    post:
      tags:
        - user
      summary: Create a New Task
      description: Create a New Task
      operationId: createANewTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Description of the task
                dueDate:
                  type: string
                  example: '2023-12-12'
                priority:
                  type: string
                  example: medium
                title:
                  type: string
                  example: New Task
            examples:
              Create a New Task:
                value:
                  description: Description of the task
                  dueDate: '2023-12-12'
                  priority: medium
                  title: New Task
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /user/tasks/{id}:
    get:
      tags:
        - user
      summary: Get Task by ID
      description: Get Task by ID
      operationId: getTaskById
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
    put:
      tags:
        - user
      summary: Update a Task
      description: Update a Task
      operationId: updateATask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Description of the task
                dueDate:
                  type: string
                  example: '2023-12-01'
                priority:
                  type: string
                  example: medium
                status:
                  type: string
                  example: completed
                title:
                  type: string
                  example: Update New Task
            examples:
              Update a Task:
                value:
                  description: Description of the task
                  dueDate: '2023-12-01'
                  priority: medium
                  status: completed
                  title: Update New Task
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
    delete:
      tags:
        - user
      summary: Delete a Task
      description: Delete a Task
      operationId: deleteATask
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /user/tasks/{id}/complete:
    patch:
      tags:
        - user
      summary: Mark Task as Complete
      description: Mark Task as Complete
      operationId: markTaskAsComplete
      requestBody:
        content:
          application/json:
            examples:
              Mark Task as Complete:
                value: ''
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /user/tasks/delete-all:
    delete:
      tags:
        - user
      summary: Delete a Task All
      description: Delete a Task All
      operationId: deleteATaskAll
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /admin/list-user:
    get:
      tags:
        - admin
      summary: Get All User
      description: Get All User
      operationId: getAllUser
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /admin/create-user:
    post:
      tags:
        - admin
      summary: Create User
      description: Create User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: nasdrzzz@eadszple.com
                password:
                  type: string
                  example: '123456'
                role:
                  type: string
                  example: user
                username:
                  type: string
                  example: tifar2
            examples:
              Create User:
                value:
                  email: nasdrzzz@eadszple.com
                  password: '123456'
                  role: user
                  username: tifar2
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /admin/update-user/{id}:
    put:
      tags:
        - admin
      summary: Update User
      description: Update User
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: das@esadsda.com
                role:
                  type: string
                  example: USER
                username:
                  type: string
                  example: tifar2
            examples:
              Update User:
                value:
                  email: das@esadsda.com
                  role: USER
                  username: tifar2
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
  /admin/delete-user/{id}:
    delete:
      tags:
        - admin
      summary: Delete User
      description: Delete User
      operationId: deleteUser
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: ''
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: auth
  - name: user
  - name: admin
